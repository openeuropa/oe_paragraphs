<?php

/**
 * @file
 * OE Paragraph Timeline module.
 */

declare(strict_types = 1);

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_field_widget_WIDGET_TYPE_form_alter().
 */
function oe_paragraphs_timeline_field_widget_timeline_widget_form_alter(&$element, FormStateInterface $form_state, $context) {
  // Set Label and Title fields required only for Timeline paragraph.
  /** @var \Drupal\Core\Field\FieldDefinitionInterface $field_definition */
  $field_definition = $context['items']->getFieldDefinition();
  if ($field_definition->getTargetEntityTypeId() !== 'paragraph') {
    return;
  }

  if ($field_definition->getTargetBundle() !== 'oe_timeline') {
    return;
  }

  // We can't use the protected isDefaultValueWidget() method.
  $is_default_value_widget = (bool) $form_state->get('default_value_widget');

  // If the default value of the widget did not change, we bail out.
  if ($is_default_value_widget) {
    return;
  }

  // Get the selector to build the paths for each field.
  $field_name = $field_definition->getName();
  $delta = $element['#delta'];
  $parents = $element['#field_parents'];
  $parents[] = $field_name;
  $selector = array_shift($parents) . '[' . implode('][', $parents) . ']' . '[' . $delta;

  // Set label required if title or content is filled in.
  if (!$element['label']['#required']) {
    $element['label']['#states']['required'][] = [
      'textarea[name="' . $selector . '][body][value]"]' => ['filled' => TRUE],
    ];
    $element['label']['#states']['required'][] = [
      ':input[name="' . $selector . '][title]"]' => ['filled' => TRUE],
    ];
  }
  // Set label required if title or content is filled in.
  if (!$element['title']['#required']) {
    $element['title']['#states']['required'][] = [
      'textarea[name="' . $selector . '][body][value]"]' => ['filled' => TRUE],
    ];
    $element['title']['#states']['required'][] = [
      ':input[name="' . $selector . '][label]"]' => ['filled' => TRUE],
    ];
  }
}

/**
 * Implements hook_entity_bundle_field_info_alter().
 */
function oe_paragraphs_timeline_entity_bundle_field_info_alter(&$fields, EntityTypeInterface $entity_type, $bundle) {
  // Add constraint to the paragraphs field of the Timeline paragraph.
  if ($entity_type->id() === 'paragraph' && $bundle === 'oe_timeline') {
    if (isset($fields['field_oe_timeline'])) {
      $fields['field_oe_timeline']->addConstraint('oe_paragraphs_timeline_required_fields', []);
    }
  }
}
