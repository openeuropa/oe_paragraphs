<?php

/**
 * @file
 * OE Paragraphs Illustrations Lists module.
 */

declare(strict_types=1);

use Drupal\Core\Entity\FieldableEntityInterface;
use Drupal\Core\Field\FieldStorageDefinitionInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\oe_paragraphs_illustrations_lists\Event\ColumnOptionsEvent;
use Drupal\oe_paragraphs_illustrations_lists\Event\RatioOptionsEvent;

/**
 * Sets allowed values for the "Image ratio" field.
 *
 * @param \Drupal\Core\Field\FieldStorageDefinitionInterface $definition
 *   The field definition.
 * @param \Drupal\Core\Entity\FieldableEntityInterface|null $entity
 *   The entity being created if applicable.
 * @param bool $cacheable
 *   Boolean indicating if the results are cacheable.
 *
 * @return array
 *   An array of possible key and value of "Image ratio" field options.
 *
 * @see options_allowed_values()
 */
function _oe_paragraphs_illustrations_lists_allowed_values_ratios(FieldStorageDefinitionInterface $definition, ?FieldableEntityInterface $entity = NULL, &$cacheable = TRUE): array {
  $event = new RatioOptionsEvent();

  \Drupal::service('event_dispatcher')->dispatch($event, RatioOptionsEvent::class);

  return $event->getRatioOptions();
}

/**
 * Sets allowed values for the "Columns" field.
 *
 * @param \Drupal\Core\Field\FieldStorageDefinitionInterface $definition
 *   The field definition.
 * @param \Drupal\Core\Entity\FieldableEntityInterface|null $entity
 *   The entity being created if applicable.
 * @param bool $cacheable
 *   Boolean indicating if the results are cacheable.
 *
 * @return array
 *   An array of possible key and value columns options.
 *
 * @see options_allowed_values()
 */
function _oe_paragraphs_illustrations_lists_allowed_values_columns(FieldStorageDefinitionInterface $definition, ?FieldableEntityInterface $entity = NULL, &$cacheable = TRUE): array {
  $event = new ColumnOptionsEvent();

  \Drupal::service('event_dispatcher')->dispatch($event, ColumnOptionsEvent::class);

  return $event->getColumnOptions();
}

/**
 * Implements hook_field_widget_single_element_WIDGET_TYPE_form_alter().
 */
function oe_paragraphs_illustrations_lists_field_widget_single_element_oe_paragraphs_variants_form_alter(&$element, FormStateInterface $form_state, $context) {
  if (in_array($element['#paragraph_type'], [
    'oe_illustration_list_flags',
    'oe_illustration_list_icons',
    'oe_illustration_list_images',
  ])) {
    // Rename the 'Default' variant to 'Horizontal'.
    $element['variant']['#options']['default'] = t('Horizontal');
  }
}
